<!-- 
/* **********************************************************************************
 * Copyright (c) Robert Nees (https://github.com/sushihangover/Irony)
 * This source code is subject to terms and conditions of the MIT License
 * for Irony. A copy of the license can be found in the License.txt file
 * at the root of this distribution.
 * By using this source code in any fashion, you are agreeing to be bound by the terms of the
 * MIT License.
 * You must not remove this notice from this software.
 * **********************************************************************************/
 -->
 
<SyntaxMode name = "Irony.ParserStates" mimeTypes="text/x-irony-parserstates">
	<Property name="LineComment">//</Property>
	<Property name="BlockCommentStart">/*</Property>
	<Property name="BlockCommentEnd">*/</Property>
	<Property name="StringQuote">"</Property>
	<Property name="StringQuote">'</Property>
	
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor">#if</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.empty">#else</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor">#elif</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.empty">#endif</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.empty">#define</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.empty">#undef</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.empty">#warning</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.empty">#error</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.line">#line</EolSpan>
	<EolSpan tagColor = "Preprocessor" color = "Preprocessor(Region Name)" rule="text.preprocessor.empty">#region</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.empty">#endregion</EolSpan>
	<EolSpan tagColor = "Preprocessor" rule="text.preprocessor.empty">#pragma</EolSpan>
	
	<EolSpan color = "Comment(Doc)" rule="XmlDocumentation" tagColor="Comment(DocTag)">///</EolSpan>
	<EolSpan color = "Comment(Line)" rule="Comment" tagColor="Comment(Line)">//</EolSpan>
	
	<Span color = "Comment(Block)" rule="Comment" tagColor="Comment(Line)">
		<Begin>/*</Begin>
		<End>*/</End>
	</Span>

	<Span color = "String" rule="String" stopateol = "true" escape='\"'>
		<Begin>"</Begin>
		<End>"</End>
	</Span>

	<Span color = "String" rule="String" stopateol = "true" escape="\'">
		<Begin>&apos;</Begin>
		<End>&apos;</End>
	</Span>
	
	<Match color = "Number">CSharpNumber</Match>
	
	<Keywords color = "Punctuation">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Punctuation(Brackets)">
		<Word>(</Word>
		<Word>)</Word>
		<Word>&lt;</Word>
		<Word>&gt;</Word>
		<Word>{</Word>
		<Word>}</Word>
		<Word>[</Word>
		<Word>]</Word>
	</Keywords>
	
	<Keywords color = "Keyword(Access)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Operator)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Selection)">
		<Word></Word>

	</Keywords>
	
	<Keywords color = "Keyword(Iteration)">
		<Word>Reduce</Word>
		<Word>Shift</Word>
		<Word>Transitions</Word>
		<Word>Statement</Word>
		<Word>items</Word>
	</Keywords>
	
	<Keywords color = "Keyword(Jump)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Context)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Exception)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Constants)">
		<Word>true</Word>
		<Word>false</Word>
		<Word>null</Word>
	</Keywords>
	
	<Keywords color = "Keyword(Modifiers)">
		<Word>-></Word>
		<Word>++-></Word>
		<Word>---></Word>
		<Word>==</Word>
		<Word>!=</Word>
		<Word>!</Word>
		<Word>&amp;&amp;</Word>
		<Word>||</Word>
	</Keywords>
	
	<Keywords color = "Keyword(Type)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Void)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Namespace)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Property)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Declaration)">
		<Word>State</Word>
	</Keywords>
	
	<Keywords color = "Keyword(Parameter)">
		<Word>Inadequate</Word>
	</Keywords>

	<Keywords color = "Keyword(Operator Declaration)">
		<Word></Word>
	</Keywords>
	
	<Keywords color = "Keyword(Other)">
		<Word>EOF</Word>
	</Keywords>
	
	<Rule name = "text.preprocessor.empty" ignorecase="True">
		<EolSpan color = "Comment(Doc)" rule="XmlDocumentation" tagColor="Comment(DocTag)">///</EolSpan>
		<EolSpan color = "Comment(Line)" rule="Comment" tagColor="Comment(Line)">//</EolSpan>
	</Rule>

	<Rule name = "text.preprocessor.line" ignorecase="True">
		
		<Keywords color = "Keyword(Context)">
			<Word>hidden</Word>
			<Word>default</Word>
		</Keywords>
		
		<Span color = "String" rule="String" stopateol = "true">
			<Begin>"</Begin>
			<End>"</End>
		</Span>

		<Match color = "Number">CSharpNumber</Match>
	
		<EolSpan color = "Comment(Doc)" rule="XmlDocumentation" tagColor="Comment(DocTag)">///</EolSpan>
		<EolSpan color = "Comment(Line)" rule="Comment" tagColor="Comment(Line)">//</EolSpan>
	</Rule>

		
	<Rule name = "Comment">
		<Keywords color="Comment Tag" ignorecase="True">
			<Word>TODO</Word>
			<Word>FIXME</Word>
			<Word>HACK</Word>
			<Word>UNDONE</Word>
		</Keywords>	
	</Rule>
	
	<Rule name = "String">
		<Match color ="String(Escape)">\\(['"\\abfnrtv]|x[0-9a-fA-F]{2,4}|0\d\d)</Match>
	</Rule>
	
	<Rule name = "XmlDocumentation">
		<Delimiters>&lt;&gt;</Delimiters>

		<Span color = "Comment(DocTag)" rule = "XmlDocumentationTag">
			<Begin>&lt;</Begin>
			<End>&gt;</End>
		</Span>
	</Rule>

	<Rule name = "XmlDocumentationTag">
	</Rule>

</SyntaxMode>
